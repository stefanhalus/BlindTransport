package ro.stefanhalus.android.blindtransport.DatabaseModel;

import java.util.ArrayList;

import ro.stefanhalus.android.blindtransport.Models.LinesModel;
import ro.stefanhalus.android.blindtransport.Models.StopsModel;

public class bakDate {
    public void insertStations() {
        ArrayList<String> l = new ArrayList<>();
        l.add("Agronomia");
        l.add("Andrei Muresanu");
        l.add("Anton Pann");
        l.add("Barbu Patriciu");
        l.add("Becas Est");
        l.add("Becas Vest");
        l.add("Bistritei");
        l.add("Borsec Nord");
        l.add("Borsec Sud");
        l.add("Calea Manastur");
        l.add("Centrul Medical");
        l.add("Closca");
        l.add("Compexit");
        l.add("Compl. Tempus Nord");
        l.add("Compl. Tempus Sud");
        l.add("Dacia Service");
        l.add("Dacia Service Sos");
        l.add("Disp. Clabucet");
        l.add("Disp. Unirii");
        l.add("Disp. Zorilor");
        l.add("Drapelului Est");
        l.add("Drapelului Vest");
        l.add("Drum Faget");
        l.add("Fabrica de Bere");
        l.add("Fagului");
        l.add("Garbau");
        l.add("Ghe. Dima");
        l.add("Gheorghe Doja");
        l.add("Gradini Manastur");
        l.add("Herculane");
        l.add("I.P. Voitesti Nord");
        l.add("I.P. Voitesti Sud");
        l.add("Ion Mester ");
        l.add("Izlazului");
        l.add("Memorandumului Nord");
        l.add("Memorandumului Sud");
        l.add("Minerva");
        l.add("N. Titulescu");
        l.add("Observatorului Nord");
        l.add("Observatorului Sud");
        l.add("Opera");
        l.add("Opera");
        l.add("P-ta 1 Mai");
        l.add("P-ta 1 Mai Sos");
        l.add("P-ta Avram Iancu");
        l.add("P-ta Cipariu Est");
        l.add("P-ta Cipariu Nord");
        l.add("P-ta Cipariu Sud");
        l.add("P-ta Garii Sos");
        l.add("P-ta Garii Sud");
        l.add("P-ta I Agarbiceanu Est");
        l.add("P-ta I Agarbiceanu Vest");
        l.add("P-ta M. Viteazul Vest");
        l.add("Paris");
        l.add("Peana");
        l.add("Ploiesti");
        l.add("PMV 2 Sos");
        l.add("Pod Traian");
        l.add("Primaverii");
        l.add("Regionala CFR");
        l.add("Septimiu Albini Nord");
        l.add("Septimiu Albini Sud");
        l.add("Silviu Dragomir");
        l.add("Snagov Nord");
        l.add("Snagov Sud");
        l.add("Sora");
        l.add("Spitalul de Copii");
        l.add("Spitalul Recuperare Nord");
        l.add("Spitalul Recuperare Sud");
        l.add("Teatru");
        l.add("Traian");
        l.add("Trifoiului Nord");
        l.add("Trifoiului Sud");
        l.add("Victoria");
        l.add("Vitacom");
        l.add("Vitacom Nord");
        l.add("Zorilor");
//        for (String item : l) {
//            btDb.insertStation(item);
//        }
        ArrayList<StopsModel> m = new ArrayList<>();
        m.add(new StopsModel(1, 1));
        m.add(new StopsModel(1, 2));
        m.add(new StopsModel(1, 3));
        m.add(new StopsModel(1, 4));
        m.add(new StopsModel(2, 5));
        m.add(new StopsModel(2, 6));
        m.add(new StopsModel(2, 1));
        m.add(new StopsModel(3, 3));
        m.add(new StopsModel(3, 4));
        m.add(new StopsModel(3, 5));
        m.add(new StopsModel(3, 7));
        m.add(new StopsModel(4, 8));
        m.add(new StopsModel(4, 11));
        m.add(new StopsModel(5, 4));
        m.add(new StopsModel(5, 6));
        m.add(new StopsModel(5, 9));
        m.add(new StopsModel(5, 14));
        m.add(new StopsModel(5, 17));
        m.add(new StopsModel(6, 1));
        m.add(new StopsModel(6, 2));
        m.add(new StopsModel(6, 3));
        m.add(new StopsModel(7, 4));
        m.add(new StopsModel(7, 6));
        m.add(new StopsModel(7, 7));
        m.add(new StopsModel(7, 9));
        m.add(new StopsModel(8, 6));
        m.add(new StopsModel(8, 7));
        m.add(new StopsModel(9, 8));
        m.add(new StopsModel(9, 9));
        m.add(new StopsModel(9, 11));
        m.add(new StopsModel(9, 13));
        m.add(new StopsModel(10, 14));
        m.add(new StopsModel(10, 15));
        m.add(new StopsModel(10, 16));
        m.add(new StopsModel(10, 17));
        m.add(new StopsModel(11, 21));
        m.add(new StopsModel(11, 22));
        m.add(new StopsModel(11, 24));
        m.add(new StopsModel(12, 25));
        m.add(new StopsModel(12, 15));
        m.add(new StopsModel(12, 17));
        m.add(new StopsModel(12, 18));
        m.add(new StopsModel(13, 21));
        m.add(new StopsModel(13, 23));
        m.add(new StopsModel(13, 25));
        m.add(new StopsModel(14, 25));
        m.add(new StopsModel(14, 26));
        m.add(new StopsModel(14, 27));
        m.add(new StopsModel(15, 28));
        m.add(new StopsModel(15, 31));
        m.add(new StopsModel(15, 32));
        m.add(new StopsModel(15, 33));
        m.add(new StopsModel(15, 34));
        m.add(new StopsModel(16, 31));
        m.add(new StopsModel(16, 45));
        m.add(new StopsModel(17, 2));
        m.add(new StopsModel(17, 4));
        m.add(new StopsModel(17, 6));
        m.add(new StopsModel(18, 5));
        m.add(new StopsModel(18, 6));
        m.add(new StopsModel(18, 8));
        m.add(new StopsModel(19, 9));
        m.add(new StopsModel(19, 12));
        m.add(new StopsModel(19, 14));
        m.add(new StopsModel(20, 15));
        m.add(new StopsModel(20, 16));
        m.add(new StopsModel(20, 17));
        m.add(new StopsModel(20, 22));
        boolean insStatus = false;
//        for (StopsModel stop : m) {
//            long lastInsId = btDb.insertStop(stop);
//            if (lastInsId>0) {
//                insStatus = true;
//            }
//        }
        ArrayList<LinesModel> n = new ArrayList<>();
        n.add(new LinesModel(1, "1", 1, 2));
        n.add(new LinesModel(2, "3", 1, 4));
        n.add(new LinesModel(3, "4", 1, 3));
        n.add(new LinesModel(4, "5", 1, 3));
        n.add(new LinesModel(5, "6", 1, 3));
        n.add(new LinesModel(6, "7", 1, 3));
        n.add(new LinesModel(7, "8", 1, 3));
        n.add(new LinesModel(8, "8L", 1, 3));
        n.add(new LinesModel(9, "9", 1, 3));
        n.add(new LinesModel(10, "18", 1, 3));
        n.add(new LinesModel(10, "19", 1, 3));
        n.add(new LinesModel(10, "20", 1, 3));
        n.add(new LinesModel(10, "21", 1, 3));
        n.add(new LinesModel(10, "22", 1, 3));
        n.add(new LinesModel(10, "23", 1, 3));
        n.add(new LinesModel(10, "23L", 1, 3));
        n.add(new LinesModel(10, "24", 1, 3));
        n.add(new LinesModel(10, "24B", 1, 3));
        n.add(new LinesModel(10, "25", 1, 3));
        n.add(new LinesModel(10, "25N", 1, 3));
        n.add(new LinesModel(10, "26", 1, 3));
        n.add(new LinesModel(10, "26L", 1, 3));
        n.add(new LinesModel(10, "27", 1, 3));
        n.add(new LinesModel(10, "28", 1, 3));
        n.add(new LinesModel(10, "28B", 1, 3));
        n.add(new LinesModel(10, "29", 1, 3));
        n.add(new LinesModel(10, "30", 1, 3));
        n.add(new LinesModel(10, "31", 1, 3));
        n.add(new LinesModel(10, "32", 1, 3));
        n.add(new LinesModel(10, "32B", 1, 3));
        n.add(new LinesModel(10, "33", 1, 3));
        n.add(new LinesModel(10, "34", 1, 3));
        n.add(new LinesModel(10, "35", 1, 3));
        n.add(new LinesModel(10, "36B", 1, 3));
        n.add(new LinesModel(10, "36L", 1, 3));
        n.add(new LinesModel(10, "37", 1, 3));
        n.add(new LinesModel(10, "38", 1, 3));
        n.add(new LinesModel(10, "39", 1, 3));
        n.add(new LinesModel(10, "39L", 1, 3));
        n.add(new LinesModel(10, "40", 1, 3));
        n.add(new LinesModel(10, "40S", 1, 3));
        n.add(new LinesModel(10, "41", 1, 3));
        n.add(new LinesModel(10, "42", 1, 3));
        n.add(new LinesModel(10, "43", 1, 3));
        n.add(new LinesModel(10, "43B", 1, 3));
        n.add(new LinesModel(10, "43P", 8, 3));
        n.add(new LinesModel(10, "46", 1, 3));
        n.add(new LinesModel(10, "46B", 1, 3));
        n.add(new LinesModel(10, "47", 1, 3));
        n.add(new LinesModel(10, "48", 1, 3));
        n.add(new LinesModel(10, "48L", 1, 3));
        n.add(new LinesModel(10, "50", 1, 3));
        n.add(new LinesModel(10, "50L", 1, 3));
        n.add(new LinesModel(10, "52", 1, 3));
        n.add(new LinesModel(10, "87B", 1, 3));
        n.add(new LinesModel(10, "100", 1, 3));
        n.add(new LinesModel(10, "101", 1, 3));
        n.add(new LinesModel(10, "102", 1, 3));
        n.add(new LinesModel(10, "102L", 1, 3));
//        for (LinesModel item : n) {
//            btDb.insertLine(item);
//        }
//        filter_stations_edit.setText(String.valueOf(insStatus));
    }
}
